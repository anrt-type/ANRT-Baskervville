# automatic
@Uppercase = [ A Aacute Abreve Acaron Acircumflex Adieresis Agrave Amacron Aogonek Aring Aringacute Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Eth Dcaron Dcroat E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F Fhook G Gbreve Gcommaaccent Gdotaccent H Hbar I Iacute Icaron Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Eng Ntilde O Oacute Ocaron Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scommaaccent T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Ugrave Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Ytilde Z Zacute Zcaron Zdotaccent Delta Omega ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn CAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn CRT;
languagesystem latn AZE;

feature aalt {
# automatic
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature lnum;
feature onum;
feature c2sc;
feature smcp;
feature case;
feature ordn;
feature ccmp;
} aalt;

feature locl {
# automatic
script latn;
language CAT;
sub  l' periodcentered' l by ldot;
sub  L' periodcentered' L by Ldot;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language CRT;
sub i by idotaccent;
language AZE;
sub i by idotaccent;
} locl;

feature subs {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} subs;

feature sinf {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} sinf;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub a by a.sups;
sub d by d.sups;
sub e by e.sups;
sub h by h.sups;
sub m by m.sups;
sub n by n.sups;
sub o by o.sups;
sub r by r.sups;
sub s by s.sups;
sub t by t.sups;
sub zero by zero.sups;
sub four by four.sups;
sub five by five.sups;
sub six by six.sups;
sub seven by seven.sups;
sub eight by eight.sups;
sub nine by nine.sups;
} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;

feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
} frac;

feature lnum {
# automatic
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub percent by percent.lf;
sub perthousand by perthousand.lf;
} lnum;

feature onum {
# automatic
sub zero.lf by zero;
sub one.lf by one;
sub two.lf by two;
sub three.lf by three;
sub four.lf by four;
sub five.lf by five;
sub six.lf by six;
sub seven.lf by seven;
sub eight.lf by eight;
sub nine.lf by nine;
sub percent.lf by percent;
sub perthousand.lf by perthousand;
} onum;

feature c2sc {
# automatic
sub A by a.sc;
sub Aacute by aacute.sc;
sub Abreve by abreve.sc;
sub Acaron by acaron.sc;
sub Acircumflex by acircumflex.sc;
sub Adieresis by adieresis.sc;
sub Agrave by agrave.sc;
sub Amacron by amacron.sc;
sub Aogonek by aogonek.sc;
sub Aring by aring.sc;
sub Aringacute by Aringacute.sc;
sub Atilde by atilde.sc;
sub AE by ae.sc;
sub B by b.sc;
sub C by c.sc;
sub Cacute by cacute.sc;
sub Ccaron by ccaron.sc;
sub Ccedilla by ccedilla.sc;
sub Cdotaccent by cdotaccent.sc;
sub D by d.sc;
sub Eth by eth.sc;
sub Dcaron by dcaron.sc;
sub Dcroat by dcroat.sc;
sub E by e.sc;
sub Eacute by eacute.sc;
sub Ecaron by ecaron.sc;
sub Ecircumflex by ecircumflex.sc;
sub Edieresis by edieresis.sc;
sub Edotaccent by edotaccent.sc;
sub Egrave by egrave.sc;
sub Emacron by emacron.sc;
sub Eogonek by eogonek.sc;
sub F by f.sc;
sub Fhook by Fhook.sc;
sub G by g.sc;
sub Gbreve by gbreve.sc;
sub Gcommaaccent by gcommaaccent.sc;
sub Gdotaccent by gdotaccent.sc;
sub H by h.sc;
sub Hbar by hbar.sc;
sub I by i.sc;
sub Iacute by iacute.sc;
sub Icaron by icaron.sc;
sub Icircumflex by icircumflex.sc;
sub Idieresis by idieresis.sc;
sub Idotaccent by idotaccent.sc;
sub Igrave by igrave.sc;
sub Imacron by imacron.sc;
sub Iogonek by iogonek.sc;
sub J by j.sc;
sub K by k.sc;
sub Kcommaaccent by kcommaaccent.sc;
sub L by l.sc;
sub Lacute by lacute.sc;
sub Lcaron by lcaron.sc;
sub Lcommaaccent by lcommaaccent.sc;
sub Ldot by ldot.sc;
sub Lslash by lslash.sc;
sub M by m.sc;
sub N by n.sc;
sub Nacute by nacute.sc;
sub Ncaron by ncaron.sc;
sub Ncommaaccent by ncommaaccent.sc;
sub Eng by eng.sc;
sub Ntilde by ntilde.sc;
sub O by o.sc;
sub Oacute by oacute.sc;
sub Ocaron by ocaron.sc;
sub Ocircumflex by ocircumflex.sc;
sub Odieresis by odieresis.sc;
sub Ograve by ograve.sc;
sub Ohungarumlaut by ohungarumlaut.sc;
sub Omacron by omacron.sc;
sub Oslash by oslash.sc;
sub Otilde by otilde.sc;
sub OE by oe.sc;
sub P by p.sc;
sub Thorn by thorn.sc;
sub Q by q.sc;
sub R by r.sc;
sub Racute by racute.sc;
sub Rcaron by rcaron.sc;
sub Rcommaaccent by rcommaaccent.sc;
sub S by s.sc;
sub Sacute by sacute.sc;
sub Scaron by scaron.sc;
sub Scedilla by scedilla.sc;
sub Scommaaccent by scommaaccent.sc;
sub T by t.sc;
sub Tbar by tbar.sc;
sub Tcaron by tcaron.sc;
sub Tcedilla by tcedilla.sc;
sub Tcommaaccent by tcommaaccent.sc;
sub U by u.sc;
sub Uacute by uacute.sc;
sub Ucaron by ucaron.sc;
sub Ucircumflex by ucircumflex.sc;
sub Udieresis by udieresis.sc;
sub Udieresisacute by Udieresisacute.sc;
sub Udieresiscaron by Udieresiscaron.sc;
sub Udieresisgrave by Udieresisgrave.sc;
sub Udieresismacron by Udieresismacron.sc;
sub Ugrave by ugrave.sc;
sub Uhungarumlaut by uhungarumlaut.sc;
sub Umacron by umacron.sc;
sub Uogonek by uogonek.sc;
sub Uring by uring.sc;
sub Utilde by utilde.sc;
sub V by v.sc;
sub W by w.sc;
sub Wacute by wacute.sc;
sub Wcircumflex by wcircumflex.sc;
sub Wdieresis by wdieresis.sc;
sub Wgrave by wgrave.sc;
sub X by x.sc;
sub Y by y.sc;
sub Yacute by yacute.sc;
sub Ycircumflex by ycircumflex.sc;
sub Ydieresis by ydieresis.sc;
sub Ygrave by ygrave.sc;
sub Ytilde by ytilde.sc;
sub Z by z.sc;
sub Zacute by zacute.sc;
sub Zcaron by zcaron.sc;
sub Zdotaccent by zdotaccent.sc;
sub parenleft by parenleft.sc;
sub parenright by parenright.sc;
sub braceleft by braceleft.sc;
sub braceright by braceright.sc;
sub bracketleft by bracketleft.sc;
sub bracketright by bracketright.sc;
sub period by period.sc;
sub exclam by exclam.sc;
sub question by question.sc;
sub quotedblleft by quotedblleft.sc;
sub quotedblright by quotedblright.sc;
sub quoteleft by quoteleft.sc;
sub quoteright by quoteright.sc;
sub quotedbl by quotedbl.sc;
sub quotesingle by quotesingle.sc;
sub dieresiscomb by dieresiscomb.sc;
sub dotaccentcomb by dotaccentcomb.sc;
sub gravecomb by gravecomb.sc;
sub acutecomb by acutecomb.sc;
sub hungarumlautcomb by hungarumlautcomb.sc;
sub caroncomb.alt by caroncomb.alt.sc;
sub circumflexcomb by circumflexcomb.sc;
sub caroncomb by caroncomb.sc;
sub brevecomb by brevecomb.sc;
sub ringcomb by ringcomb.sc;
sub tildecomb by tildecomb.sc;
sub macroncomb by macroncomb.sc;
sub ogonekcomb by ogonekcomb.sc;
sub strokelongcomb by strokelongcomb.sc;
sub slashshortcomb by slashshortcomb.sc;
sub slashlongcomb by slashlongcomb.sc;
sub strokeshortcomb.case by strokeshortcomb.case.sc;
} c2sc;

feature smcp {
# automatic
sub a by a.sc;
sub aacute by aacute.sc;
sub abreve by abreve.sc;
sub acaron by acaron.sc;
sub acircumflex by acircumflex.sc;
sub adieresis by adieresis.sc;
sub agrave by agrave.sc;
sub amacron by amacron.sc;
sub aogonek by aogonek.sc;
sub aring by aring.sc;
sub atilde by atilde.sc;
sub ae by ae.sc;
sub b by b.sc;
sub c by c.sc;
sub cacute by cacute.sc;
sub ccaron by ccaron.sc;
sub ccedilla by ccedilla.sc;
sub cdotaccent by cdotaccent.sc;
sub d by d.sc;
sub eth by eth.sc;
sub dcaron by dcaron.sc;
sub dcroat by dcroat.sc;
sub e by e.sc;
sub eacute by eacute.sc;
sub ecaron by ecaron.sc;
sub ecircumflex by ecircumflex.sc;
sub edieresis by edieresis.sc;
sub edotaccent by edotaccent.sc;
sub egrave by egrave.sc;
sub emacron by emacron.sc;
sub eogonek by eogonek.sc;
sub f by f.sc;
sub g by g.sc;
sub gbreve by gbreve.sc;
sub gcommaaccent by gcommaaccent.sc;
sub gdotaccent by gdotaccent.sc;
sub h by h.sc;
sub hbar by hbar.sc;
sub i by i.sc;
sub iacute by iacute.sc;
sub icaron by icaron.sc;
sub icircumflex by icircumflex.sc;
sub idieresis by idieresis.sc;
sub idotaccent by idotaccent.sc;
sub igrave by igrave.sc;
sub imacron by imacron.sc;
sub iogonek by iogonek.sc;
sub j by j.sc;
sub k by k.sc;
sub kcommaaccent by kcommaaccent.sc;
sub l by l.sc;
sub lacute by lacute.sc;
sub lcaron by lcaron.sc;
sub lcommaaccent by lcommaaccent.sc;
sub ldot by ldot.sc;
sub lslash by lslash.sc;
sub m by m.sc;
sub n by n.sc;
sub nacute by nacute.sc;
sub ncaron by ncaron.sc;
sub ncommaaccent by ncommaaccent.sc;
sub eng by eng.sc;
sub ntilde by ntilde.sc;
sub o by o.sc;
sub oacute by oacute.sc;
sub ocaron by ocaron.sc;
sub ocircumflex by ocircumflex.sc;
sub odieresis by odieresis.sc;
sub ograve by ograve.sc;
sub ohungarumlaut by ohungarumlaut.sc;
sub omacron by omacron.sc;
sub oslash by oslash.sc;
sub otilde by otilde.sc;
sub oe by oe.sc;
sub p by p.sc;
sub thorn by thorn.sc;
sub q by q.sc;
sub r by r.sc;
sub racute by racute.sc;
sub rcaron by rcaron.sc;
sub rcommaaccent by rcommaaccent.sc;
sub s by s.sc;
sub sacute by sacute.sc;
sub scaron by scaron.sc;
sub scedilla by scedilla.sc;
sub scommaaccent by scommaaccent.sc;
sub t by t.sc;
sub tbar by tbar.sc;
sub tcaron by tcaron.sc;
sub tcedilla by tcedilla.sc;
sub tcommaaccent by tcommaaccent.sc;
sub u by u.sc;
sub uacute by uacute.sc;
sub ucaron by ucaron.sc;
sub ucircumflex by ucircumflex.sc;
sub udieresis by udieresis.sc;
sub ugrave by ugrave.sc;
sub uhungarumlaut by uhungarumlaut.sc;
sub umacron by umacron.sc;
sub uogonek by uogonek.sc;
sub uring by uring.sc;
sub utilde by utilde.sc;
sub v by v.sc;
sub w by w.sc;
sub wacute by wacute.sc;
sub wcircumflex by wcircumflex.sc;
sub wdieresis by wdieresis.sc;
sub wgrave by wgrave.sc;
sub x by x.sc;
sub y by y.sc;
sub yacute by yacute.sc;
sub ycircumflex by ycircumflex.sc;
sub ydieresis by ydieresis.sc;
sub ygrave by ygrave.sc;
sub ytilde by ytilde.sc;
sub z by z.sc;
sub zacute by zacute.sc;
sub zcaron by zcaron.sc;
sub zdotaccent by zdotaccent.sc;
sub parenleft by parenleft.sc;
sub parenright by parenright.sc;
sub braceleft by braceleft.sc;
sub braceright by braceright.sc;
sub bracketleft by bracketleft.sc;
sub bracketright by bracketright.sc;
sub period by period.sc;
sub exclam by exclam.sc;
sub question by question.sc;
sub quotedblleft by quotedblleft.sc;
sub quotedblright by quotedblright.sc;
sub quoteleft by quoteleft.sc;
sub quoteright by quoteright.sc;
sub quotedbl by quotedbl.sc;
sub quotesingle by quotesingle.sc;
sub dieresiscomb by dieresiscomb.sc;
sub dotaccentcomb by dotaccentcomb.sc;
sub gravecomb by gravecomb.sc;
sub acutecomb by acutecomb.sc;
sub hungarumlautcomb by hungarumlautcomb.sc;
sub caroncomb.alt by caroncomb.alt.sc;
sub circumflexcomb by circumflexcomb.sc;
sub caroncomb by caroncomb.sc;
sub brevecomb by brevecomb.sc;
sub ringcomb by ringcomb.sc;
sub tildecomb by tildecomb.sc;
sub macroncomb by macroncomb.sc;
sub ogonekcomb by ogonekcomb.sc;
sub strokelongcomb by strokelongcomb.sc;
sub slashshortcomb by slashshortcomb.sc;
sub slashlongcomb by slashlongcomb.sc;
sub strokeshortcomb.case by strokeshortcomb.case.sc;
} smcp;

feature case {
# automatic
sub colon by colon.case;
sub semicolon by semicolon.case;
sub exclamdown by exclamdown.case;
sub questiondown by questiondown.case;
sub periodcentered by periodcentered.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub quotedblbase by quotedblbase.case;
sub quotedblleft by quotedblleft.case;
sub quotedblright by quotedblright.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub ogonekcomb by ogonekcomb.case;
sub strokeshortcomb by strokeshortcomb.case;
sub slashshortcomb by slashshortcomb.case;
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub percent by percent.lf;
sub perthousand by perthousand.lf;
} case;

feature liga {
# automatic
sub f f b by f_f_b.liga;
sub f f h by f_f_h.liga;
sub f f i by f_f_i.liga;
sub f f j by f_f_j.liga;
sub f f k by f_f_k.liga;
sub f f l by f_f_l.liga;
sub f b by f_b.liga;
sub f f by f_f.liga;
sub f h by f_h.liga;
sub f j by f_j.liga;
sub f k by f_k.liga;
sub f i by fi;
sub f l by fl;
} liga;

feature cpsp {
pos [ @Uppercase ] <10 0 10 0>;
} cpsp;

feature ordn {
sub [zero one two three four five six seven eight nine zero.lf one.lf two.lf three.lf four.lf five.lf six.lf seven.lf eight.lf nine.lf ] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine zero.lf one.lf two.lf three.lf four.lf five.lf six.lf seven.lf eight.lf nine.lf N n n.sc ] [O o degree]' by ordmasculine;
} ordn;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [cedillacomb ogonekcomb slashlongcomb slashshortcomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb ogonekcomb strokeshortcomb slashshortcomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case ogonekcomb.case strokeshortcomb.case slashshortcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;
} ccmp;

