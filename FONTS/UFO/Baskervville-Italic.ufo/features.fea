# automatic
@Uppercase = [ A Aacute Abreve Acaron Acircumflex Adieresis Agrave Amacron Aogonek Aring Aringacute Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Eth Dcaron Dcroat E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F Fhook G Gbreve Gcommaaccent Gdotaccent H Hbar I Iacute Icaron Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Eng Ntilde O Oacute Ocaron Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scommaaccent T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Ugrave Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Ytilde Z Zacute Zcaron Zdotaccent Delta Omega ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn CAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn CRT;
languagesystem latn AZE;

feature aalt {
# automatic
feature locl;
feature sups;
feature lnum;
feature onum;
feature case;
feature calt;
feature ccmp;
feature subs;
feature sinf;
feature numr;
feature dnom;
feature frac;
feature ordn;
} aalt;

feature locl {
# automatic
script latn;
language CAT;
sub  l' periodcentered' l by ldot;
sub  L' periodcentered' L by Ldot;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language CRT;
sub i by idotaccent;
language AZE;
sub i by idotaccent;
} locl;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub a by a.sups;
sub d by d.sups;
sub e by e.sups;
sub h by h.sups;
sub m by m.sups;
sub n by n.sups;
sub o by o.sups;
sub r by r.sups;
sub s by s.sups;
sub t by t.sups;
sub zero by zero.sups;
sub four by four.sups;
sub five by five.sups;
sub six by six.sups;
sub seven by seven.sups;
sub eight by eight.sups;
sub nine by nine.sups;
} sups;

feature lnum {
# automatic
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub percent by percent.lf;
sub perthousand by perthousand.lf;
} lnum;

feature onum {
# automatic
sub zero.lf by zero;
sub one.lf by one;
sub two.lf by two;
sub three.lf by three;
sub four.lf by four;
sub five.lf by five;
sub six.lf by six;
sub seven.lf by seven;
sub eight.lf by eight;
sub nine.lf by nine;
sub percent.lf by percent;
sub perthousand.lf by perthousand;
} onum;

feature case {
# automatic
sub colon by colon.case;
sub semicolon by semicolon.case;
sub periodcentered by periodcentered.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub quotedblbase by quotedblbase.case;
sub quotedblleft by quotedblleft.case;
sub quotedblright by quotedblright.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub ogonekcomb by ogonekcomb.case;
sub strokeshortcomb by strokeshortcomb.case;
sub slashshortcomb by slashshortcomb.case;
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub percent by percent.lf;
sub perthousand by perthousand.lf;
} case;

feature liga {
# automatic
sub f f i by f_f_i.liga;
sub f f j by f_f_j.liga;
sub f f l by f_f_l.liga;
sub f b by f_b.liga;
sub f f by f_f.liga;
sub f h by f_h.liga;
sub f j by f_j.liga;
sub f k by f_k.liga;
sub f t by f_t.liga;
sub t t by t_t.liga;
sub f i by fi;
sub f l by fl;
} liga;

feature calt {
sub q' [f j jdotless y yacute ycircumflex ydieresis ygrave f_b.liga f_f.liga f_f_i.liga f_f_j.liga f_f_l.liga f_h.liga f_j.liga f_k.liga f_t.liga fi fl ] by q.calt;

sub [g gbreve gcommaaccent gdotaccent] f' by f.calt;
sub [g gbreve gcommaaccent gdotaccent] j' by j.calt;
sub [g gbreve gcommaaccent gdotaccent] jdotless' by jdotless.calt;
} calt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [cedillacomb ogonekcomb slashlongcomb slashshortcomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb ogonekcomb strokeshortcomb slashshortcomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case ogonekcomb.case strokeshortcomb.case slashshortcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;
} ccmp;

feature subs {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} subs;

feature sinf {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} sinf;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;

feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
} ordn;

